apply plugin: 'java'

// Translation
apply plugin: "org.omegat.gradle"

// FIXME: here is ugly configuration for omegat plugin
dependencies {
    omegat files('buildSrc/OmegaT.jar'),
           fileTree('buildSrc/lib')
}

ext {
    intellij = "intellij-community"
    android = "android"
    product = "product"
    plugin = "plugins"

    targetDir = new File(rootDir, 'target')

    targetIjDir = new File(targetDir, intellij)
    targetAndDir = new File(targetDir, android)
    targetProductDir = new File(targetDir, product)
    targetPluginsDir = new File(targetDir, plugin)

    tmpDir = new File(buildDir, 'tmp')
    buildPath = new File(buildDir, 'libs')
}

task cleanTargetDirs(type: Delete) {
    delete targetIjDir
    delete targetAndDir
    delete targetProductDir
    delete targetPluginsDir
}

// Custom jar tasks
Closure processR = { src, dest ->
    ["messages"].each { type ->
        copy {
            from new File(src, type)
            into new File(dest, type)
        }
    }
    ["fileTemplates", "inspectionDescriptions", "intentionDescriptions",
     "postfixTemplates", "search", "tips"].each { type ->
        copy {
            from new File(src, type)
            into new File(dest, type + "_ja")
        }
    }
}

Closure myJar = {baseDir, translationSet ->
        File srcPath = new File(baseDir, translationSet)
        File tmpPath = new File(tmpDir, translationSet)
        processR(srcPath, tmpPath)
        jar {
            archiveName = 'resources_ja-' + translationSet + '.jar'
            destinationDir = buildPath
            from tmpPath
        }
    
}

task pluginJar(type: Jar, dependsOn: 'translate')  {
    files { targetPluginsDir.listFiles() }.collect {relativePath(it)}.each { pluginDir ->
        File srcPath = new File(rootDir, pluginDir)
        String pluginName = srcPath.getName()
        myJar(targetPluginsDir, pluginName)
    }
}

task customJar(type: Jar, dependsOn: 'translate') {
   [ android, product, intellij ].each { translationSet ->
        File srcPath = new File(targetDir, translationSet)
        File tmpPath = new File(tmpDir, translationSet)
        processR(srcPath, tmpPath)
        archiveName = 'resources_ja-' + translationSet + '.jar'
        destinationDir = buildPath
        from tmpPath
    }
}

artifacts {
    archives customJar
    archives pluginJar
}

dependencies {
    testRuntime customJar.outputs.files
    testRuntime pluginJar.outputs.files
}

clean.dependsOn cleanTargetDirs

task wrapper(type: Wrapper) {
  gradleVersion = '2.14.1'
}
